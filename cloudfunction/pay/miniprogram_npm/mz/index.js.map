{"version":3,"sources":["index.js","fs.js","dns.js","zlib.js","crypto.js","readline.js","child_process.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ACFA,AFMA,ADGA,AENA;ACFA,AFMA,ADGA,AENA;ACFA,AFMA,ADGA,AENA;ACFA,AFMA,ADGA,AIZA,AFMA;ACFA,AFMA,ADGA,AIZA,AFMA;ACFA,AFMA,ADGA,AIZA,AFMA;AGRA,AFMA,AFMA,ADGA,AIZA,AFMA;AGRA,AFMA,AFMA,ADGA,AIZA,AFMA;AGRA,AFMA,AFMA,ADGA,AIZA,AFMA;AGRA,AFMA,AFMA,ADGA,AIZA,AFMA;AGRA,AJYA,ADGA,AIZA,AFMA;AGRA,ALeA,AIZA;ACFA,ALeA,AIZA;ACFA,ALeA,AIZA;ACFA,ALeA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AJaA,AIZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["module.exports = {\n  fs: require('./fs'),\n  dns: require('./dns'),\n  zlib: require('./zlib'),\n  crypto: require('./crypto'),\n  readline: require('./readline'),\n  child_process: require('./child_process')\n}\n","\nvar Promise = require('any-promise')\nvar fs\ntry {\n  fs = require('graceful-fs')\n} catch(err) {\n  fs = require('fs')\n}\n\nvar api = [\n  'appendFile',\n  'chmod',\n  'chown',\n  'close',\n  'fchmod',\n  'fchown',\n  'fdatasync',\n  'fstat',\n  'fsync',\n  'ftruncate',\n  'futimes',\n  'lchown',\n  'link',\n  'lstat',\n  'mkdir',\n  'open',\n  'read',\n  'readFile',\n  'readdir',\n  'readlink',\n  'realpath',\n  'rename',\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'write',\n  'writeFile'\n]\n\ntypeof fs.access === 'function' && api.push('access')\ntypeof fs.copyFile === 'function' && api.push('copyFile')\ntypeof fs.mkdtemp === 'function' && api.push('mkdtemp')\n\nrequire('thenify-all').withCallback(fs, exports, api)\n\nexports.exists = function (filename, callback) {\n  // callback\n  if (typeof callback === 'function') {\n    return fs.stat(filename, function (err) {\n      callback(null, !err);\n    })\n  }\n  // or promise\n  return new Promise(function (resolve) {\n    fs.stat(filename, function (err) {\n      resolve(!err)\n    })\n  })\n}\n","\nrequire('thenify-all').withCallback(\n  require('dns'),\n  exports, [\n    'lookup',\n    'resolve',\n    'resolve4',\n    'resolve6',\n    'resolveCname',\n    'resolveMx',\n    'resolveNs',\n    'resolveSrv',\n    'resolveTxt',\n    'reverse'\n  ]\n)\n","\nrequire('thenify-all').withCallback(\n  require('zlib'),\n  exports, [\n    'deflate',\n    'deflateRaw',\n    'gzip',\n    'gunzip',\n    'inflate',\n    'inflateRaw',\n    'unzip',\n  ]\n)\n","\nrequire('thenify-all').withCallback(\n  require('crypto'),\n  exports, [\n    'pbkdf2',\n    'pseudoRandomBytes',\n    'randomBytes'\n  ]\n)\n","var readline = require('readline')\nvar Promise = require('any-promise')\nvar objectAssign = require('object-assign')\nvar Interface = readline.Interface\n\nfunction wrapCompleter (completer) {\n  if (completer.length === 2) return completer\n\n  return function (line, cb) {\n    var result = completer(line)\n\n    if (typeof result.then !== 'function') {\n      return cb(null, result)\n    }\n\n    result.catch(cb).then(function (result) {\n      process.nextTick(function () { cb(null, result) })\n    })\n  }\n}\n\nfunction InterfaceAsPromised (input, output, completer, terminal) {\n  if (arguments.length === 1) {\n    var options = input\n\n    if (typeof options.completer === 'function') {\n      options = objectAssign({}, options, {\n        completer: wrapCompleter(options.completer)\n      })\n    }\n\n    Interface.call(this, options)\n  } else {\n    if (typeof completer === 'function') {\n      completer = wrapCompleter(completer)\n    }\n\n    Interface.call(this, input, output, completer, terminal)\n  }\n}\n\nInterfaceAsPromised.prototype = Object.create(Interface.prototype)\n\nInterfaceAsPromised.prototype.question = function (question, callback) {\n  if (typeof callback === 'function') {\n    return Interface.prototype.question.call(this, question, callback)\n  }\n\n  var self = this\n  return new Promise(function (resolve) {\n    Interface.prototype.question.call(self, question, resolve)\n  })\n}\n\nobjectAssign(exports, readline, {\n  Interface: InterfaceAsPromised,\n  createInterface: function (input, output, completer, terminal) {\n    if (arguments.length === 1) {\n      return new InterfaceAsPromised(input)\n    }\n\n    return new InterfaceAsPromised(input, output, completer, terminal)\n  }\n})\n","\nrequire('thenify-all').withCallback(\n  require('child_process'),\n  exports, [\n    'exec',\n    'execFile',\n  ]\n)\n"]}