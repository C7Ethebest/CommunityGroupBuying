{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["/*!\n * copy-to - index.js\n * Copyright(c) 2014 dead_horse <dead_horse@qq.com>\n * MIT Licensed\n */\n\n\n\n/**\n * slice() reference.\n */\n\nvar slice = Array.prototype.slice;\n\n/**\n * Expose copy\n *\n * ```\n * copy({foo: 'nar', hello: 'copy'}).to({hello: 'world'});\n * copy({foo: 'nar', hello: 'copy'}).toCover({hello: 'world'});\n * ```\n *\n * @param {Object} src\n * @return {Copy}\n */\n\nmodule.exports = Copy;\n\n\n/**\n * Copy\n * @param {Object} src\n * @param {Boolean} withAccess\n */\n\nfunction Copy(src, withAccess) {\n  if (!(this instanceof Copy)) return new Copy(src, withAccess);\n  this.src = src;\n  this._withAccess = withAccess;\n}\n\n/**\n * copy properties include getter and setter\n * @param {[type]} val [description]\n * @return {[type]} [description]\n */\n\nCopy.prototype.withAccess = function (w) {\n  this._withAccess = w !== false;\n  return this;\n};\n\n/**\n * pick keys in src\n *\n * @api: public\n */\n\nCopy.prototype.pick = function(keys) {\n  if (!Array.isArray(keys)) {\n    keys = slice.call(arguments);\n  }\n  if (keys.length) {\n    this.keys = keys;\n  }\n  return this;\n};\n\n/**\n * copy src to target,\n * do not cover any property target has\n * @param {Object} to\n *\n * @api: public\n */\n\nCopy.prototype.to = function(to) {\n  to = to || {};\n\n  if (!this.src) return to;\n  var keys = this.keys || Object.keys(this.src);\n\n  if (!this._withAccess) {\n    for (var i = 0; i < keys.length; i++) {\n      key = keys[i];\n      if (to[key] !== undefined) continue;\n      to[key] = this.src[key];\n    }\n    return to;\n  }\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!notDefined(to, key)) continue;\n    var getter = this.src.__lookupGetter__(key);\n    var setter = this.src.__lookupSetter__(key);\n    if (getter) to.__defineGetter__(key, getter);\n    if (setter) to.__defineSetter__(key, setter);\n\n    if (!getter && !setter) {\n      to[key] = this.src[key];\n    }\n  }\n  return to;\n};\n\n/**\n * copy src to target,\n * override any property target has\n * @param {Object} to\n *\n * @api: public\n */\n\nCopy.prototype.toCover = function(to) {\n  var keys = this.keys || Object.keys(this.src);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    delete to[key];\n    var getter = this.src.__lookupGetter__(key);\n    var setter = this.src.__lookupSetter__(key);\n    if (getter) to.__defineGetter__(key, getter);\n    if (setter) to.__defineSetter__(key, setter);\n\n    if (!getter && !setter) {\n      to[key] = this.src[key];\n    }\n  }\n};\n\nCopy.prototype.override = Copy.prototype.toCover;\n\n/**\n * append another object to src\n * @param {Obj} obj\n * @return {Copy}\n */\n\nCopy.prototype.and = function (obj) {\n  var src = {};\n  this.to(src);\n  this.src = obj;\n  this.to(src);\n  this.src = src;\n\n  return this;\n};\n\n/**\n * check obj[key] if not defiend\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction notDefined(obj, key) {\n  return obj[key] === undefined\n    && obj.__lookupGetter__(key) === undefined\n    && obj.__lookupSetter__(key) === undefined;\n}\n"]}