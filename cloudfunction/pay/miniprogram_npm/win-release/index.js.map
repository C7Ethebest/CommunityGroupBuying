{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\nvar os = require('os');\nvar semver = require('semver');\n\nvar nameMap = {\n\t'10.0': '10',\n\t'6.3': '8.1',\n\t'6.2': '8',\n\t'6.1': '7',\n\t'6.0': 'Vista',\n\t'5.1': 'XP',\n\t'5.0': '2000',\n\t'4.9': 'ME',\n\t'4.1': '98',\n\t'4.0': '95'\n};\n\nmodule.exports = function (release) {\n\tvar verRe = /\\d+\\.\\d+/;\n\tvar version = verRe.exec(release || os.release());\n\n\t// workaround for Windows 10 on node < 3.1.0\n\tif (!release && process.platform === 'win32' &&\n\t\tsemver.satisfies(process.version, '>=0.12.0 <3.1.0')) {\n\t\ttry {\n\t\t\tversion = verRe.exec(String(require('child_process').execSync('ver.exe', {timeout: 2000})));\n\t\t} catch (err) {}\n\t}\n\n\tif (release && !version) {\n\t\tthrow new Error('`release` argument doesn\\'t match `n.n`');\n\t}\n\n\treturn nameMap[(version || [])[0]];\n};\n"]}